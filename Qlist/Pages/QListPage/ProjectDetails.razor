@page "/Data/ProjectDetail/{id:int}"

@implements IDisposable;

@using Data;
@using ModelM2s;
@using ModelM4s;
@using System.Globalization;
@using Radzen;
@using Radzen.Blazor;
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

@inject ProjectData pj;
@inject NavigationManager NavManager
@inject BlazorSpinner.SpinnerService spin

@attribute [Authorize(Roles = "1,2,3")]

<br />
<h3>Project Details</h3>
<br />

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-sm-8">
                <b>Running Number : </b>@projecthd.ProjectHdrunNo
            </div>
            <div class="col-sm-4">
                @if (!hideEdit && userrole < 3)
                {
                    <RadzenButton Click=@(args => GoEdit()) Icon="edit" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium" Text="EDIT" style="float:right" />
                }
            </div>
        </div>

    </div>
    <div class="card-body">
        <div class="row pb-1">
            <div class="col-2"><b>Project Name</b></div>
            <div class="col">@projecthd.ProjectName</div>
        </div>

        <div class="row pb-1">
            <div class="col-2"><b>Description</b></div>
            <div class="col"><a style="white-space: pre-wrap;">@projecthd.Description</a></div>
        </div>

        <div class="row pb-1">
            <div class="col-2"><b>Remark</b></div>
            <div class="col"><a style="white-space: pre-wrap;">@projecthd.Remark</a></div>
        </div>

        <div class="row pb-1">
            <div class="col-2"><b>Status</b></div>
            <div class="col">@projecthd.ProjectHdstatus</div>
        </div>

        <div class="row pb-1">
            <div class="col-2"><b>Budget</b></div>
            @if (string.IsNullOrEmpty(projecthd.Budget.ToString()))
            {
                <div class="col">@String.Format(new System.Globalization.CultureInfo("th-TH"), "{0:C}", 0)</div>
            }
            else
            {
                <div class="col">@String.Format(new System.Globalization.CultureInfo("th-TH"), "{0:C}", projecthd.Budget)</div>
            }
        </div>

        <div class="row pb-1">
            <div class="col-2"><b>Started Date</b></div>
            @if (string.IsNullOrEmpty(projecthd.PlanStartDate.ToString()))
            {
                <div class="col">Not Planed</div>
            }
            else
            {
                <div class="col">@projecthd.PlanStartDate?.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</div>
            }
        </div>

        <div class="row pb-1">
            <div class="col-2"><b>Finished Date</b></div>
            @if (string.IsNullOrEmpty(projecthd.PlanFinishDate.ToString()))
            {
                <div class="col">Not Planed</div>
            }
            else
            {
                <div class="col">@projecthd.PlanFinishDate?.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</div>
            }
        </div>
    </div>
</div>

<br />

@if (customerinfo is not null)
{
    <div class="card">
        <div class="card-header">Customer</div>
        <div class="card-body">

            @foreach (var list in customerinfo)
            {
                <div class="row">
                    <div class="col-2"><b>Name</b></div>
                    <div class="col">@list.Name</div>
                </div>
                <div class="row">
                    <div class="col-2"><b>Address</b></div>
                    <div class="col"><a style="white-space: pre-wrap;">@list.Address</a></div>
                </div>
                <div class="row">
                    <div class="col-2"><b>Telephone</b></div>
                    <div class="col">@list.Telephone</div>
                </div>
                <div class="row">
                    <div class="col-2"><b>E-Mail</b></div>
                    <div class="col">@list.Email</div>
                </div>
                <div class="row">
                    <div class="col-2"><b>Website</b></div>
                    <div class="col">@list.WebSite</div>
                </div>
                <div class="row">
                    <div class="col-2"><b>Facebook</b></div>
                    <div class="col">@list.Facebook</div>
                </div>
                <div class="row">
                    <div class="col-2"><b>Other</b></div>
                    <div class="col"><a style="white-space: pre-wrap;">@list.Other</a></div>
                </div>
            }
            <br>

            @if (listcontact is not null)
            {
                <div class="card">
                    <div class="card-header bg-info">
                        Contact
                    </div>
                    @foreach (var list in listcontact)
                    {


                        <div class="card-body bg-info bg-opacity-10">
                            <div class="row">
                                <div class="col-2"><b>Contact Name</b></div>
                                <div class="col">@list.Name</div>
                            </div>
                            <div class="row">
                                <div class="col-2"><b>Position</b></div>
                                <div class="col">@list.Position</div>
                            </div>
                            <div class="row">
                                <div class="col-2"><b>Address</b></div>
                                <div class="col"><a style="white-space: pre-wrap;">@list.Address</a></div>
                            </div>
                            <div class="row">
                                <div class="col-2"><b>Email</b></div>
                                <div class="col">@list.Email</div>
                            </div>
                            <div class="row">
                                <div class="col-2"><b>MobileNo</b></div>
                                <div class="col">@list.MobileNo</div>
                            </div>
                            <div class="row">
                                <div class="col-2"><b>Other</b></div>
                                <div class="col"><a style="white-space: pre-wrap;">@list.Other</a></div>
                            </div>
                        </div>



                    }
                </div>
            }
        </div>
    </div>

    <br />


}
<br />
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col">Project Sub List</div>
            <div class="col-sm-auto">
                <RadzenButton Click=@(args => Gosubedit()) Icon="add" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium" Text="ADD PROJECT SUB" />
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <p>
                <RadzenDataGrid PageSize="5" AllowPaging="true" AllowSorting="true" Data="@projecthd.ProjectSubProjectTls" TItem="ProjectSubProjectTl" ColumnWidth="100px" GridLines="DataGridGridLines.Horizontal" class="border-0">
                    <Columns>
                        <RadzenDataGridColumn TItem="ProjectSubProjectTl" Property="ProjectSubRunNo" Title="Running Number" Width="150px">
                            <Template Context="sub">
                                <a href="@($"/Data/ProjectSubDetail/{sub.Id}")">@sub.ProjectSubRunNo</a>
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="ProjectSubProjectTl" Property="ProjectSubName" Title="Project Sub Name" Width="250px" />
                        <RadzenDataGridColumn TItem="ProjectSubProjectTl" Property="Description" Title="Description" Width="150px">
                            <Template Context="desc">
                                <a style="white-space: pre-wrap;">@desc.Description</a>
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="ProjectSubProjectTl" Property="ProjectSubStatus" Title="Status" Width="150px" />
                    </Columns>
                </RadzenDataGrid>
            </p>
        </div>
    </div>
</div>

<br />



@code {
    [Parameter]
    public int id { get; set; }

    public ProjectHd projecthd { get; set; } = new ProjectHd();
    public ProjectSubProjectTl formsub { get; set; } = new ProjectSubProjectTl();

    private List<CustomCustomer> customerinfo;
    private List<CustomContact> listcontact;
    private List<MasterTambon> tambon;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private ClaimsPrincipal AuthenticationStateUser { get; set; }

    int userrole;
    string usermemberno;
    int userid;

    bool hideEdit = false;

    protected override async Task OnInitializedAsync()
    {
        spin.Show();
        await base.OnInitializedAsync();
        await GetDataAuthen();
        projecthd = await pj.GetProjectHDbyID(id);
        customerinfo = Newtonsoft.Json.JsonConvert.DeserializeObject<List<CustomCustomer>>(projecthd.CustomerInfo);
        listcontact = Newtonsoft.Json.JsonConvert.DeserializeObject<List<CustomContact>>(projecthd.ContactInfo);
        await checkEdit();
        StateHasChanged();
        spin.Hide();
    }

    async Task GetDataAuthen()
    {
        usermemberno = string.Empty;

        AuthenticationState authenticationState;
        authenticationState = await authenticationStateTask;
        this.AuthenticationStateUser = authenticationState.User;
        var claim = this.AuthenticationStateUser.Claims.ToList();
        userrole = int.Parse(claim[1].Value);
        usermemberno = claim[2].Value;
        userid = int.Parse(claim[3].Value);
    }

    async Task checkEdit()
    {
        foreach (var list in projecthd.ProjectSubProjectTls)
        {
            if (list.ProjectSubMemberAsgmts.Count > 0)
            {
                hideEdit = true;
                return;
            }
        }
    }

    private void GoEdit()
    {
        NavManager.NavigateTo("/Data/ProjectEdit/" + projecthd.Id);
    }

    private void Goback()
    {
        NavManager.NavigateTo("/Data/Project");
    }

    private void Gosubedit()
    {
        NavManager.NavigateTo("/Data/AddProjectSub/" + id.ToString());
    }

    public void Dispose()
    {
        if (customerinfo is not null) customerinfo.Clear();
        if (listcontact is not null) listcontact.Clear();
        if (tambon is not null) tambon.Clear();
        Console.WriteLine("Disconnected");
    }
}