@page "/Data/ProjectSubDetail/{id:int}"

@using Data;
@using ModelM2s;
@using ModelM4s;

@inject ProjectData pj;
@inject NavigationManager NavManager

<h3>ProjectSubDetails</h3>
@if (projectsub.ProjectSubMemberAsgmts.Count == 0)
{
    <button type="submit" class="btn btn-primary" style="float:right" @onclick="()=>GoEdit()">Edit</button>
}
<br /><br />
<p font-size:25px> <b>Project Sub Running Number :</b> @projectsub.ProjectSubRunNo  </p>
<p font-size:25px> <b>Project Sub Name :</b> @projectsub.ProjectSubName  </p>
<p font-size:25px> <b>Description :</b> @projectsub.Description  </p>
<p font-size:25px> <b>Remarked :</b> @projectsub.Remark </p>

@if (string.IsNullOrEmpty(projectsub.Budget.ToString()))
{
    <p font-size:25px> <b>Budget :</b> 0 THB</p>
}
else
{
    <p font-size:25px> <b>Budget :</b> @projectsub.Budget THB</p>
}

<p font-size:25px> <b>Status :</b> @projectsub.ProjectSubStatus </p>

@if (string.IsNullOrEmpty(projectsub.PlanStartDate.ToString()))
{
    <p font-size:25px> <b>Started Date :</b> Not Planed</p>
}
else
{
    <p font-size:25px> <b>Started Date :</b> @projectsub.PlanStartDate</p>
}

@if (string.IsNullOrEmpty(projectsub.PlanFinishDate.ToString()))
{
    <p font-size:25px> <b>Finished Date :</b> Not Planed</p>
}
else
{
    <p font-size:25px> <b>Finished Date :</b> @projectsub.PlanFinishDate</p>
}

<br />
<h4><b>Project Category</b></h4>
@if (subcapability is null)
{
    <p><em>No Capability</em></p>
}
else
{
    <table class="table table-striped" style="background-color:white; border:solid">
        <thead>
            <tr>
                <th>Capability Name</th>
                <th>Capability Sub Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cat in subcapability)
            {
                var cate = capability.Where(w => w.Id == cat.CategoryCatId).FirstOrDefault();
                <tr>
                    <td>@cate.CategoryCat</td>
                    <td>@cat.CategoryCatSub</td>
                </tr>
            }
        </tbody>
    </table>
}

<br />
<h4><b>Project Document</b></h4>
@if (showdoc is null)
{
    <p><em>No Document</em></p>
}
else
{
    <table class="table table-striped" style="background-color:white; border:solid">
        <thead>
            <tr>
                <th>Document Name</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var doc in showdoc)
            {
                <tr>
                    @if (doc.DocumentPath.ToUpper().Contains("PDFFILES"))
                    {
                        <td>
                        <a href="@doc.DocumentPath">Link</a>
                        </td>
                    }
                    else
                    {
                        <td>
                        <img src="@doc.DocumentPath" width="300px" />
                        </td>
                    }
                    <td>@doc.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

<br />
<h4><b>Membership Assignments</b></h4>
@if (projectsub.ProjectSubMemberAsgmts is not null)
{
    if (projectsub.ProjectSubMemberAsgmts.Count > 0)
    {
        int no = 0;
        foreach (var list in projectsub.ProjectSubMemberAsgmts)
        {
            no++;
            var item = member.Where(w => w.Id == list.MemberId).FirstOrDefault();
            if (list.Awarded == "Y")
            {
                <p style="background-color:lightgreen; border:solid">
                    &nbsp; No. @no <br />
                    &nbsp; Thai Name : @item.CompanyNameTh <br />
                    &nbsp; English Name : @item.CompanyNameEn <br />
                    &nbsp; Telephone : @item.Telephone <br />
                    &nbsp; Date Confirmed : @list.DateConfirm <br />
                    &nbsp; Awarded : @list.Awarded
                </p>
            }
            else
            {
                <p style="background-color:white; border:solid">
                &nbsp; No. @no <br />
                &nbsp; Thai Name : @item.CompanyNameTh <br />
                &nbsp; English Name : @item.CompanyNameEn <br />
                &nbsp; Telephone : @item.Telephone <br />
                &nbsp; Date Confirmed : @list.DateConfirm <br />
                &nbsp; Awarded : @list.Awarded
            </p>
            }
        }
    }
    else
    {
        <p><em>No Membership Assignments</em></p>
    }
}

@if (show)
{
    <button type="submit" class="btn btn-primary" style="left" @onclick="()=>UpdateProgress()">Update Progress</button>
}
else
{
    <button type="submit" class="btn btn-primary" style="left" @onclick="()=>UpdateAssignment()">Update Member Assignments</button>
}

<br />
<br />
<button type="submit" class="btn btn-primary" style="left" @onclick="()=>Gomain()">Project Main</button>
&nbsp;&nbsp;
<button type="submit" class="btn btn-primary" style="left" @onclick="()=>Goback()">Project Sub</button>
<br />
<br />

@code {
    [Parameter]
    public int id { get; set; }

    public ProjectSubProjectTl projectsub { get; set; } = new ProjectSubProjectTl();
    public ProjectRatypeTl projectra { get; set; } = new ProjectRatypeTl();

    private List<MasterCapabilityCatSub> subcapability;
    private List<MasterCapabilityCat> capability;
    private List<MemberMaster> member;
    private List<ProjectDocument> projectdoc;
    private List<ProjectDocument> showdoc;

    bool show = false;

    protected override async Task OnInitializedAsync()
    {
        projectsub = await pj.GetProjectSubProjectTLbyID(id);
        projectdoc = await pj.GetAllProjectDocument();
        projectra = await pj.GetProjectRATypeBySubProjectID(projectsub.Id);
        capability = await pj.GetAllCapability();
        member = await pj.GetAllMember();

        subcapability = Newtonsoft.Json.JsonConvert.DeserializeObject<List<MasterCapabilityCatSub>>(projectra.MemberCapability);
        showdoc = projectdoc.Where(w => w.ProjectSubProjectTlid == id).ToList();

        checkProgress();
        StateHasChanged();
    }

    private void checkProgress()
    {
        foreach (var list in projectsub.ProjectSubMemberAsgmts)
        {
            if (list.Awarded == "Y")
            {
                show = true;
                return;
            }
        }
    }

    private void UpdateAssignment()
    {
        NavManager.NavigateTo("/Data/MemberAssign/" + id.ToString());
    }

    private void UpdateProgress()
    {
        NavManager.NavigateTo("/Data/ProjectSubProgress/" + id.ToString());
    }

    private void GoEdit()
    {
        NavManager.NavigateTo("/Data/ProjectSubEdit/" + id.ToString());
    }

    private void Goback()
    {
        NavManager.NavigateTo("/Data/ProjectDetail/" + projectsub.ProjectHdid.ToString());
    }

    private void Gomain()
    {
        NavManager.NavigateTo("/Data/Project");
    }
}

