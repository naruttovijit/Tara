@page "/Data/ProjectSubDetail/{id:int}"

@implements IDisposable;

@using Data;
@using ModelM2s;
@using ModelM4s;

@inject ProjectData pj;
@inject NavigationManager NavManager

<div class="container">
    <div class="row">
        <div class="col"><h3>ProjectSubDetails</h3></div>
        <div class="col">
            @if (projectsub.ProjectSubMemberAsgmts.Count == 0)
            {
                <button type="submit" class="btn btn-primary" style="float:right" @onclick="()=>GoEdit()">Edit</button>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-2"><p><b>Running Number :</b></p></div>
        <div class="col">@projectsub.ProjectSubRunNo</div>
    </div>
    <div class="row">
        <div class="col-2"><p><b>Project Sub Name :</b></p></div>
        <div class="col">@projectsub.ProjectSubName</div>
    </div>
    <div class="row">
        <div class="col-2"><p><b>Description :</b></p></div>
        <div class="col">@projectsub.Description</div>
    </div>
    <div class="row">
        <div class="col-2"><p><b>Remarked :</b></p></div>
        <div class="col">@projectsub.Remark</div>
    </div>
    <div class="row">
        <div class="col-2"><p><b>Budget :</b></p></div>
        @if (string.IsNullOrEmpty(projectsub.Budget.ToString()))
        {
            <div class="col">0 THB</div>
        }
        else
        {
            <div class="col">@projectsub.Budget THB</div>
        }
    </div>
    <div class="row">
        <div class="col-2"><p><b>Status :</b></p></div>
        <div class="col">@projectsub.ProjectSubStatus</div>
    </div>
    <div class="row">
        <div class="col-2"><p><b>Started Date :</b></p></div>
        @if (string.IsNullOrEmpty(projectsub.PlanStartDate.ToString()))
        {
            <div class="col">Not Planed</div>
        }
        else
        {
            <div class="col">@projectsub.PlanStartDate</div>
        }
    </div>
    <div class="row">
        <div class="col-2"><p><b>Finished Date :</b></p></div>
        @if (string.IsNullOrEmpty(projectsub.PlanFinishDate.ToString()))
        {
            <div class="col">Not Planed</div>
        }
        else
        {
            <div class="col">@projectsub.PlanFinishDate</div>
        }
    </div>
</div>
<br />

<h4>Project Category</h4>
<div class="container">
    @if (subcapability is null)
    {
        <div class="row"><p><em>No Capability</em></p></div>
    }
    else
    {
        <table class="table table-striped" style="background-color:white; border:solid">
            <thead>
                <tr>
                    <th>Capability Name</th>
                    <th>Capability Sub Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cat in subcapability)
                {
                    var cate = capability.Where(w => w.Id == cat.CategoryCatId).FirstOrDefault();
                    <tr>
                        <td>@cate.CategoryCat</td>
                        <td>@cat.CategoryCatSub</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    
</div>
<br />

<h4>Project Document</h4>
<div class="container">
    @if (showdoc is null)
    {
        <div class="row"><p><em>No Document</em></p></div>
    }
    else
    {
        <table class="table table-striped" style="background-color:white; border:solid">
            <thead>
                <tr>
                    <th>Document Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var doc in showdoc)
                {
                    <tr>
                        @if (doc.DocumentPath.ToUpper().Contains("PDFFILES"))
                        {
                            <td>
                                <a href="@doc.DocumentPath">Link</a>
                            </td>
                        }
                        else
                        {
                            <td>
                                <img src="@doc.DocumentPath" width="300px" />
                            </td>
                        }
                        <td>@doc.Description</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
<br />

<h4>Membership Assignments</h4>
<div class="container">
    @if (projectsub.ProjectSubMemberAsgmts is not null)
    {
        if (projectsub.ProjectSubMemberAsgmts.Count > 0)
        {
            int no = 0;
            foreach (var list in projectsub.ProjectSubMemberAsgmts)
            {
                no++;
                var item = member.Where(w => w.Id == list.MemberId).FirstOrDefault();
                if (list.Awarded == "Y")
                {
                    <div class="row" style="background-color:lightgreen; border:solid">
                        <div class="row">
                            <div class="col-2"><p>No.</p></div>
                            <div class="col">@no</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>Thai Name :</p></div>
                            <div class="col">@item.CompanyNameTh</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>English Name :</p></div>
                            <div class="col">@item.CompanyNameEn</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>Telephone :</p></div>
                            <div class="col">@item.Telephone</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>Date Confirmed :</p></div>
                            <div class="col">@list.DateConfirm</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>Awarded :</p></div>
                            <div class="col">@list.Awarded</div>
                        </div>
                    </div>
                    <br />
                }
                else
                {
                    <div class="row" style="background-color:white; border:solid">
                        <div class="row">
                            <div class="col-2"><p>No.</p></div>
                            <div class="col">@no</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>Thai Name :</p></div>
                            <div class="col">@item.CompanyNameTh</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>English Name :</p></div>
                            <div class="col">@item.CompanyNameEn</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>Telephone :</p></div>
                            <div class="col">@item.Telephone</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>Date Confirmed :</p></div>
                            <div class="col">@list.DateConfirm</div>
                        </div>
                        <div class="row">
                            <div class="col-2"><p>Awarded :</p></div>
                            <div class="col">@list.Awarded</div>
                        </div>
                    </div>
                    <br />
                }
            }
        }
        else
        {
            <div class="row">
                <p><em>No Membership Assignments</em></p>
            </div>
        }
    }
</div>
<br />

<div class="container">
    <div class="row">
        @if (show)
        {
            <div class="col-3"><button type="submit" class="btn btn-primary" style="left" @onclick="()=>UpdateProgress()">Update Progress</button></div>
        }
        else
        {
            <div class="col-3"> <button type="submit" class="btn btn-primary" style="left" @onclick="()=>UpdateAssignment()">Update Member Assignments</button></div>
        }
        
    </div>
</div>
<br />

<div class="container">
    <div class="row">
        <div class="col-2"><button type="submit" class="btn btn-primary" style="left" @onclick="()=>Gomain()">Project Main</button></div>
        <div class="col-2"><button type="submit" class="btn btn-primary" style="left" @onclick="()=>Goback()">Project Detail</button></div>
    </div>
</div>
<br />

@code {
    [Parameter]
    public int id { get; set; }

    public ProjectSubProjectTl projectsub { get; set; } = new ProjectSubProjectTl();
    public ProjectRatypeTl projectra { get; set; } = new ProjectRatypeTl();

    private List<MasterCapabilityCatSub> subcapability;
    private List<MasterCapabilityCat> capability;
    private List<MemberMaster> member;
    private List<ProjectDocument> projectdoc;
    private List<ProjectDocument> showdoc;

    bool show = false;

    protected override async Task OnInitializedAsync()
    {
        projectsub = await pj.GetProjectSubProjectTLbyID(id);
        projectdoc = await pj.GetAllProjectDocument();
        projectra = await pj.GetProjectRATypeBySubProjectID(projectsub.Id);
        capability = await pj.GetAllCapability();
        member = await pj.GetAllMember();

        subcapability = Newtonsoft.Json.JsonConvert.DeserializeObject<List<MasterCapabilityCatSub>>(projectra.MemberCapability);
        showdoc = projectdoc.Where(w => w.ProjectSubProjectTlid == id).ToList();

        checkProgress();
        StateHasChanged();
    }

    private void checkProgress()
    {
        foreach (var list in projectsub.ProjectSubMemberAsgmts)
        {
            if (list.Awarded == "Y")
            {
                show = true;
                return;
            }
        }
    }

    private void UpdateAssignment()
    {
        NavManager.NavigateTo("/Data/MemberAssign/" + id.ToString());
    }

    private void UpdateProgress()
    {
        NavManager.NavigateTo("/Data/ProjectSubProgress/" + id.ToString());
    }

    private void GoEdit()
    {
        NavManager.NavigateTo("/Data/ProjectSubEdit/" + id.ToString());
    }

    private void Goback()
    {
        NavManager.NavigateTo("/Data/ProjectDetail/" + projectsub.ProjectHdid.ToString());
    }

    private void Gomain()
    {
        NavManager.NavigateTo("/Data/Project");
    }

    public void Dispose()
    {
        Console.WriteLine("Disconnected");
    }
}

