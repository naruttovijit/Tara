@page "/Data/ProjectSubDetail/{id:int}"

@using Data;
@using ModelM2s;
@using ModelM4s;
@using ModelM2s.Json;

@inject ProjectData pj;

<h3>ProjectSubDetails</h3>
<br /><br />
<p font-size:25px> <b>Project Sub Running Number :</b> @projectsub.ProjectSubRunNo  </p>
<p font-size:25px> <b>Project Sub Name :</b> @projectsub.ProjectSubName  </p>
<p font-size:25px> <b>Description :</b> @projectsub.Description  </p>
<p font-size:25px> <b>Remarked :</b> @projectsub.Remark </p>

@if (string.IsNullOrEmpty(projectsub.Budget.ToString()))
{
    <p font-size:25px> <b>Budget :</b> 0 THB</p>
}
else
{
    <p font-size:25px> <b>Budget :</b> @projectsub.Budget THB</p>
}

<p font-size:25px> <b>Status :</b> @projectsub.ProjectSubStatus</p>

@if (string.IsNullOrEmpty(projectsub.PlanStartDate.ToString()))
{
    <p font-size:25px> <b>Started Date :</b> Not Planed</p>
}
else
{
    <p font-size:25px> <b>Started Date :</b> @projectsub.PlanStartDate</p>
}

@if (string.IsNullOrEmpty(projectsub.PlanFinishDate.ToString()))
{
    <p font-size:25px> <b>Finished Date :</b> Not Planed</p>
}
else
{
    <p font-size:25px> <b>Finished Date :</b> @projectsub.PlanFinishDate</p>
}

<br />
<br />
<h4><b>Project Category</b></h4>
@if (subcategory is null)
{
    <p><em>No Category</em></p>
}
else
{
    <table class="table table-striped" style="background-color:white; border:solid">
        <thead>
            <tr>
                <th>Category Name</th>
                <th>Category Sub Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cat in subcategory)
            {
                var cate = category.Where(w => w.Id == cat.CategoryCatId).FirstOrDefault();
                <tr>
                    <td>@cate.CategoryCat</td>
                    <td>@cat.CategoryCatSub</td>
                </tr>
            }
        </tbody>
    </table>
}

<br />
<br />

<h4><b>Project Document</b></h4>
@if (showdoc is null)
{
    <p><em>No Document</em></p>
}
else
{
    <table class="table table-striped" style="background-color:white; border:solid">
        <thead>
            <tr>
                <th>Document Name</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var doc in showdoc)
            {
                <tr>
                    @if (doc.DocumentPath.ToUpper().Contains("PDFFILES"))
                    {
                        <td>
                        <a href="@doc.DocumentPath">Link</a>
                        </td>
                    }
                    else
                    {
                        <td>
                        <img src="@doc.DocumentPath" width="300px" />
                        </td>
                    }
                    <td>@doc.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

<br />
<br />

<h4><b>Membership Assignments</b></h4>
@if (projectsub.ProjectSubMemberAsgmts is null)
{
    <p><em>No Membership Assignments</em></p>
}
else
{
    int no = 0;
    foreach (var list in projectsub.ProjectSubMemberAsgmts)
    {
        no++;
        var item = member.Where(w => w.id == list.MemberId.ToString()).FirstOrDefault();
        <p style="background-color:white; border:solid">
            &nbsp; No. @no <br />
            &nbsp; Thai Name : @item.CompanyNameTH <br />
            &nbsp; English Name : @item.CompanyNameEN <br />
            &nbsp; Telephone : @item.Telephone <br />
            &nbsp; Date Confirmed : @list.DateConfirm <br />
            &nbsp; Awarded : @list.Awarded
        </p>
    }
}

<button type="submit" class="btn btn-primary" style="float:right;" <a href="/Data/Project"></a>Project Main</button>
<button type="submit" class="btn btn-primary" style="float:right;" <a href="/Data/ProjectDetail/@id"></a>Go Back</button>
<br />
<br />

@code {
    [Parameter]
    public int id { get; set; }

    public ProjectSubProjectTl projectsub { get; set; } = new ProjectSubProjectTl();
    private List<MasterCapabilityCatSub> subcategory;
    private List<MasterCapabilityCat> category;
    private List<Member> member;
    private List<ProjectDocument> projectdoc;
    private List<ProjectDocument> showdoc;
    private List<ProjectRatypeTl> projectra;
    string JsonCat;
    string mem = @"
[{
    id:'5',
    name:'กิติยศ สาคริก',
    CompanyNameEN:'Busarakham Hospital',
    CompanyNameTH:'โรงพยาบาลบุษราคัม',
    address:'อาคารอิมแพคชาเลนเจอร์ 2 Popular 1 Rd, Tambon Ban Mai, Amphoe Pak Kret, Chang Wat Nonthaburi 11120',
    Telephone:'02 029 1661'
},
{
    id:'6',
    name:'ทวี ภาวนากร',
    CompanyNameEN:'Forth Corporation Public Company Limited',
    CompanyNameTH:'บริษัท ฟอร์ท คอร์ปอเรชั่น จำกัด (มหาชน)',
    address:'1053/1 Phahonyothin Road, Phayathai, Phayathai, Bangkok 10400',
    Telephone:''
},
{
    id:'7',
    name:'วีรยา บรรลือทรัพย์',
    CompanyNameEN:'InGenium Group CO.,LTD.',
    CompanyNameTH:'บริษัท อินจีเนียม จำกัด (สำนักงานใหญ่)',
    address:'25/38 Moo 4, Banhphai, Muang Nonthaburi, Nonthaburi 11000 Thailand.',
    Telephone:'+66(0)2 117-4619'
}]
";

    protected override async Task OnInitializedAsync()
    {
        projectsub = await pj.GetProjectSubProjectTLbyID(id);
        projectdoc = await pj.GetAllProjectDocument();
        projectra = await pj.GetAllProjectRAType();
        category = await pj.GetAllCapability();
        JsonCat = string.Empty;
        foreach (var projectsubcat in projectra.Where(w => w.ProjectSubProjectTlid == id).ToList())
        {
            JsonCat = projectsubcat.MemberCapability;
        }
        subcategory = Newtonsoft.Json.JsonConvert.DeserializeObject<List<MasterCapabilityCatSub>>(JsonCat);
        member = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Member>>(mem);
        showdoc = projectdoc.Where(w => w.ProjectSubProjectTlid == id).ToList();
        StateHasChanged();
    }
}
