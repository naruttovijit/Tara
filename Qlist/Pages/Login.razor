@layout LoginLayout;
@page "/Login"
@using Qlist.Authentication;
@using Radzen;
@using Radzen.Blazor;
@using Data;
@using ModelM4s;

@inject ProjectData pj;
@inject NavigationManager NavManager
@inject AuthenticationStateProvider authStateProvider;
@inject UserAccountService userAccountService;
@inject IJSRuntime js;


<br />
<br />
<div class="d-flex justify-content-center">
    <div class="row">
        <div class="col">
            <RadzenCard class="d-flex m-5 p-0 rz-border-radius-4 rz-shadow-10" Style="width: 100%; flex-direction: column; overflow: hidden; align-items: stretch;">
                <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-background-color-base-300 p-3" style="text-align: left;">
                    <div class="col-1">
                        <img src="/images/logo.png" height="70">
                    </div>
                </RadzenCard>
                <RadzenCard Class="rz-shadow-0 p-5">
                    <RadzenTemplateForm Data=@("Login") >
                        <RadzenLogin AllowRegister="false" AllowResetPassword="true" Login=@(args => OnLogin(args)) />
                    </RadzenTemplateForm>
                </RadzenCard>
            </RadzenCard>
        </div>
    </div>
</div>

@code {
    string userName = string.Empty;
    string password = string.Empty;
    bool rememberMe = true;

    private async Task OnLogin(LoginArgs args)
    {
        userName = args.Username;
        password = EncriptString.EncodePasswordToBase64(args.Password);
        //password = args.Password;
        
        var userAccount = userAccountService.GetByUserName(userName);
        if (userAccount == null || userAccount.Password != password)
        {
            await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
            NavManager.NavigateTo("/", true);
        }
        else
        {
            var customAuthStateProvider = (CustomAuthentication)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession
                {
                    UserName = userAccount.LoginName,
                    Role = userAccount.RoleId,
                    MemberNo = userAccount.MemberNo,
                    UserID = userAccount.Id,
                    UserLongName = userAccount.NameLastName
                });

            NavManager.NavigateTo("/Data/Project",true);
        }
        
    }

}